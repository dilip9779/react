{"version":3,"sources":["Components/Header.js","Components/Login.js","Components/Signup.js","Context.js","Components/GetUsers.js","Components/AddUser.js","Components/Main.js","Actions/Actions.js","Components/SideBar.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","Component","Login","class","type","placeholder","htmlFor","Signup","AppContext","React","createContext","Provider","GetUsers","handleUpdate","context","name","value","email","this","get_users","allUsers","mainData","all_users","map","user_name","user_email","isEditing","ref","item","defaultValue","onClick","cancelEdit","editMode","handleDelete","length","role","contextType","AddUser","insertUser","event","username","useremail","onSubmit","val","Main","contextValue","state","users","fetchUsers","Axios","get","then","data","console","log","success","setState","reverse","catch","error","user","post","alert","msg","deleteUser","filter","preventDefault","persist","target","reset","bind","SideBar","to","exact","path","component","SignUp","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f17aec8.chunk.js","sourcesContent":["// Header.js\r\nimport React, {Component} from 'react';\r\n\r\nexport default class Header extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"header-area\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-6 col-sm-8 clearfix\">\r\n                    <div className=\"nav-btn pull-left\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 col-sm-4 clearfix\">\r\n                    <ul className=\"notification-area pull-right\">\r\n                        <li id=\"full-view\"><i className=\"ti-fullscreen\"></i></li>\r\n                        <li id=\"full-view-exit\"><i className=\"ti-zoom-out\"></i></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>  \r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport class Login extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"main-content-inner\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 mt-5\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">           \r\n            <form>\r\n                <h3>Sign In</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Forgot \r\n                </p>\r\n            </form>\r\n            </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>           \r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react'\r\n\r\nexport class Signup extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"main-content-inner\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 mt-5\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">              \r\n            <form>\r\n                <h3>Sign Up</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered\r\n                </p>\r\n            </form>\r\n            </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>                   \r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react'\r\nexport const AppContext = React.createContext();\r\nexport const Provider = AppContext.Provider;","import React, {Component} from 'react';\r\nimport {AppContext} from '../Context';\r\nclass GetUsers extends Component{\r\n    static contextType = AppContext;\r\n\r\n    componentDidMount(){\r\n        this.context.get_users();\r\n    }\r\n\r\n    handleUpdate = (id) => {\r\n        this.context.handleUpdate(id,this.name.value,this.email.value);\r\n    }\r\n\r\n    render(){\r\n        let allUsers;\r\n        let mainData;\r\n        \r\n        allUsers = this.context.all_users.map(({id,user_name,user_email,isEditing}) => {\r\n            return isEditing === true ? (\r\n                <tr key={id}>\r\n                <td><input className=\"form-control\" type=\"text\" ref={(item) => this.name = item} defaultValue={user_name}/></td>\r\n                <td><input className=\"form-control\" type=\"email\" ref={(item) => this.email = item} defaultValue={user_email}/></td>\r\n                <td>\r\n                    <button className=\"btn btn-success mr-2\" onClick={() => this.handleUpdate(id)}>Save</button>\r\n                    <button onClick={() => this.context.cancelEdit(id)} className=\"btn btn-light\">Cancel</button>\r\n                </td>\r\n            </tr>\r\n            ) : (\r\n                <tr key={id}>\r\n                    <td>{user_name}</td>\r\n                    <td>{user_email}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-dark mr-2\" onClick={() => this.context.editMode(id)}>Edit</button>\r\n                        <button onClick={() => this.context.handleDelete(id)} className=\"btn btn-danger\">Delete</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        if(this.context.all_users.length > 0){\r\n            mainData = (\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allUsers}\r\n                    </tbody>\r\n                </table>\r\n            );\r\n        }\r\n        else{\r\n            mainData = (\r\n                <div className=\"alert alert-light\" role=\"alert\">\r\n                    <h4 className=\"alert-heading\">No User Found!</h4>\r\n                    <hr/>\r\n                    <p>Please Insert Some Users.</p>\r\n                </div>\r\n            );\r\n        }\r\n        return(\r\n            <>\r\n            {mainData}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\nexport default GetUsers;","import React,{Component} from 'react';\r\nimport {AppContext} from '../Context';\r\n\r\nclass AddUser extends Component {\r\n    static contextType = AppContext;\r\n\r\n    insertUser = (event) => {\r\n        this.context.insertUser(event,this.username.value,this.useremail.value);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form onSubmit={this.insertUser}>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-sm-6\">\r\n                    <label className=\"font-weight-bold\">Name</label>\r\n                    <input type=\"text\" name=\"username\" ref={(val) => this.username = val} className=\"form-control\" placeholder=\"Name\"/>\r\n                </div>\r\n                <div className=\"form-group col-sm-6\">\r\n                    <label className=\"font-weight-bold\">Email</label>\r\n                    <input type=\"email\" name=\"useremail\" ref={(val) => this.useremail = val} className=\"form-control\" placeholder=\"Email\"/>\r\n                </div>\r\n                <div className=\"form-group col-sm-12 text-right\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Add user</button>\r\n                </div>\r\n            </div>\r\n        </form>  \r\n        );\r\n    }\r\n}\r\nexport default AddUser;","import React from 'react'\r\nimport {Provider} from '../Context';\r\nimport AllUsers from './GetUsers';\r\nimport AddUser from './AddUser';\r\nimport Actions from '../Actions/Actions';\r\n\r\nexport class Main extends Actions {\r\n    render(){\r\n        const contextValue = {\r\n            all_users:this.state.users,\r\n            get_users:this.fetchUsers,\r\n            editMode:this.editMode,\r\n            cancelEdit:this.cancelEdit,\r\n            handleUpdate:this.handleUpdate,\r\n            handleDelete:this.handleDelete,\r\n            insertUser:this.insertUser\r\n        }\r\n        return (\r\n          <Provider value={contextValue}>\r\n            <div class=\"page-title-area\">\r\n              <div class=\"row align-items-center\">\r\n                <div class=\"col-sm-6\">\r\n                  <div class=\"breadcrumbs-area clearfix\">\r\n                    <h4 class=\"page-title pull-left\">React WITH PHP</h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"main-content-inner\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12 mt-5\">\r\n                <AddUser/>\r\n                  <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                      <h4 class=\"header-title\">Data</h4>\r\n                      <div class=\"data-tables\">\r\n                      <AllUsers/>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>    \r\n          </Provider>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nclass Actions extends React.Component{\r\n    state = {\r\n        users:[]\r\n    }\r\n\r\n    // FETCH USERS FROM DATABASE\r\n    fetchUsers = () => {\r\n        Axios.get('http://10.154.3.108:8090/react/api/all-users.php')\r\n        .then(({data}) => {\r\n\t\t\t console.log(data.users, data);\r\n            if(data.success === 1){\r\n                this.setState({\r\n                    users:data.users.reverse()\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n     // ON EDIT MODE\r\n     editMode = (id) => {\r\n        let users = this.state.users.map(user => {\r\n            if(user.id === id){\r\n                user.isEditing = true;\r\n                return user;\r\n            }\r\n            user.isEditing = false;\r\n            return user;\r\n        });\r\n\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    //CANCEL EDIT MODE\r\n    cancelEdit = (id) => {\r\n        let users = this.state.users.map(user => {\r\n            if(user.id === id){\r\n                user.isEditing = false;\r\n                return user;\r\n            }\r\n            return user\r\n            \r\n        });\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    // UPDATE USER\r\n    handleUpdate = (id,user_name,user_email) => {\r\n        Axios.post('http://10.154.3.108:8090/react/api/update-user.php',\r\n        {\r\n            id:id,\r\n            user_name:user_name,\r\n            user_email:user_email\r\n        })\r\n        .then(({data}) => {\r\n\t\t\tconsole.log(data);\r\n            if(data.success === 1){\r\n                let users = this.state.users.map(user => {\r\n                    if(user.id === id){\r\n                        user.user_name = user_name;\r\n                        user.user_email = user_email;\r\n                        user.isEditing = false;\r\n                        return user;\r\n                    }\r\n                    return user; \r\n                });\r\n                this.setState({\r\n                    users\r\n                });\r\n            }\r\n            else{\r\n                alert(data.msg);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    // DELETE USER\r\n    handleDelete = (id) => {\r\n        let deleteUser = this.state.users.filter(user => {\r\n            return user.id !== id;\r\n        });\r\n        \r\n        Axios.post('http://10.154.3.108:8090/react/api/delete-user.php',{\r\n            id:id\r\n        })\r\n        .then(({data}) => {\r\n            if(data.success === 1){\r\n                this.setState({\r\n                    users:deleteUser\r\n                });\r\n            }\r\n            else{\r\n                alert(data.msg);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    // INSERT USER\r\n    insertUser = (event,user_name,user_email) => {\r\n        event.preventDefault();\r\n        event.persist();\r\n        Axios.post('http://10.154.3.108:8090/react/api/add-user.php',{\r\n            user_name:user_name,\r\n            user_email:user_email\r\n        })\r\n        .then(function ({data}) {\r\n            if(data.success === 1){\r\n                this.setState({\r\n                    users:[\r\n                        {\"id\":data.id,\"user_name\":user_name,\"user_email\":user_email},\r\n                        ...this.state.users\r\n                    ]\r\n                });\r\n\t\t\t\talert(data.msg);\r\n                event.target.reset();\r\n            }\r\n            else{\r\n                alert(data.msg);\r\n            }\r\n        }.bind(this))\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport default Actions;","// SideBar.js\r\n\r\nimport React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./Signup\";\r\nimport Main from \"./Main\";\r\n\r\nexport default class SideBar extends Component {\r\n    render(){\r\n        return (<Router>\r\n            <div className=\"sidebar-menu\">\r\n            <div className=\"sidebar-header\">\r\n                <div className=\"logo\">\r\n                <Link to={\"/\"}>React</Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"main-menu\">\r\n                <div className=\"menu-inner\">\r\n                    <nav>\r\n                        <ul className=\"metismenu\" id=\"menu\">\r\n                          <li><Link to={\"/\"}><i className=\"fa fa-edit\"></i><span>Add/Delete</span></Link></li>  \r\n                          <li><Link to={\"/sign-in\"}><i className=\"fa fa-sign-in\"></i><span>Login</span></Link></li>\r\n                          <li><Link to={\"/sign-up\"}><i className=\"fa fa-sign-out\"></i><span>Sign up</span></Link></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"App\">  \r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n            <Switch>\r\n                <Route exact path='/' component={Main} />\r\n                <Route path=\"/sign-in\" component={Login} />\r\n                <Route path=\"/sign-up\" component={SignUp} />\r\n            </Switch>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </Router>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Header from \"./Components/Header\";\nimport SideBar from \"./Components/SideBar\";\n\nfunction App() {\n  return (\n    <div>\n        <SideBar/>\n        <Header/> \n    </div>  \n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}