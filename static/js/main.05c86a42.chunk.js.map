{"version":3,"sources":["Context.js","Components/GetUsers.js","Components/AddUser.js","App.js","Actions/Actions.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","Provider","GetUsers","handleUpdate","id","context","name","value","email","this","get_users","allUsers","mainData","all_users","map","user_name","user_email","isEditing","className","type","ref","item","defaultValue","onClick","cancelEdit","editMode","handleDelete","length","role","Component","contextType","AddUser","insertUser","event","username","useremail","onSubmit","val","placeholder","App","contextValue","state","users","fetchUsers","Axios","get","then","data","console","log","success","setState","reverse","catch","error","user","post","alert","msg","deleteUser","filter","preventDefault","persist","target","reset","bind","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05c86a42.chunk.js","sourcesContent":["import React from 'react'\r\nexport const AppContext = React.createContext();\r\nexport const Provider = AppContext.Provider;","import React, {Component} from 'react';\r\nimport {AppContext} from '../Context';\r\nclass GetUsers extends Component{\r\n    static contextType = AppContext;\r\n\r\n    componentDidMount(){\r\n        this.context.get_users();\r\n    }\r\n\r\n    handleUpdate = (id) => {\r\n        this.context.handleUpdate(id,this.name.value,this.email.value);\r\n    }\r\n\r\n    render(){\r\n        let allUsers;\r\n        let mainData;\r\n        \r\n        allUsers = this.context.all_users.map(({id,user_name,user_email,isEditing}) => {\r\n            return isEditing === true ? (\r\n                <tr key={id}>\r\n                <td><input className=\"form-control\" type=\"text\" ref={(item) => this.name = item} defaultValue={user_name}/></td>\r\n                <td><input className=\"form-control\" type=\"email\" ref={(item) => this.email = item} defaultValue={user_email}/></td>\r\n                <td>\r\n                    <button className=\"btn btn-success mr-2\" onClick={() => this.handleUpdate(id)}>Save</button>\r\n                    <button onClick={() => this.context.cancelEdit(id)} className=\"btn btn-light\">Cancel</button>\r\n                </td>\r\n            </tr>\r\n            ) : (\r\n                <tr key={id}>\r\n                    <td>{user_name}</td>\r\n                    <td>{user_email}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-dark mr-2\" onClick={() => this.context.editMode(id)}>Edit</button>\r\n                        <button onClick={() => this.context.handleDelete(id)} className=\"btn btn-danger\">Delete</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        if(this.context.all_users.length > 0){\r\n            mainData = (\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allUsers}\r\n                    </tbody>\r\n                </table>\r\n            );\r\n        }\r\n        else{\r\n            mainData = (\r\n                <div className=\"alert alert-light\" role=\"alert\">\r\n                    <h4 className=\"alert-heading\">No User Found!</h4>\r\n                    <hr/>\r\n                    <p>Please Insert Some Users.</p>\r\n                </div>\r\n            );\r\n        }\r\n        return(\r\n            <>\r\n            {mainData}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\nexport default GetUsers;","import React,{Component} from 'react';\r\nimport {AppContext} from '../Context';\r\n\r\nclass AddUser extends Component {\r\n    static contextType = AppContext;\r\n\r\n    insertUser = (event) => {\r\n        this.context.insertUser(event,this.username.value,this.useremail.value);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form onSubmit={this.insertUser}>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-sm-6\">\r\n                    <label className=\"font-weight-bold\">Name</label>\r\n                    <input type=\"text\" name=\"username\" ref={(val) => this.username = val} className=\"form-control\" placeholder=\"Name\"/>\r\n                </div>\r\n                <div className=\"form-group col-sm-6\">\r\n                    <label className=\"font-weight-bold\">Email</label>\r\n                    <input type=\"email\" name=\"useremail\" ref={(val) => this.useremail = val} className=\"form-control\" placeholder=\"Email\"/>\r\n                </div>\r\n                <div className=\"form-group col-sm-12 text-right\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Add user</button>\r\n                </div>\r\n            </div>\r\n        </form>  \r\n        );\r\n    }\r\n}\r\nexport default AddUser;","import React from 'react';\nimport {Provider} from './Context';\nimport AllUsers from './Components/GetUsers';\nimport AddUser from './Components/AddUser';\nimport Actions from './Actions/Actions';\n\nclass App extends Actions {\n  render(){\n    const contextValue = {\n        all_users:this.state.users,\n        get_users:this.fetchUsers,\n        editMode:this.editMode,\n        cancelEdit:this.cancelEdit,\n        handleUpdate:this.handleUpdate,\n        handleDelete:this.handleDelete,\n        insertUser:this.insertUser\n    }\n    return (\n      <Provider value={contextValue}>\n        <div className=\"container-fluid bg-light\">\n              <div className=\"container p-5\">\n                  <div className=\"card shadow-sm\">\n                      <h1 className=\"card-header text-center text-uppercase text-muted\">React WITH PHP</h1>\n                      <div className=\"card-body\">\n                          <div className=\"row\">\n                              <div className=\"col-md-12\">\n                                  <AddUser/>\n                              </div>\n                              <div className=\"col-md-12\">\n                                <AllUsers/>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n      \n              </div>\n              </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\r\nimport Axios from 'axios';\r\nclass Actions extends React.Component{\r\n    state = {\r\n        users:[]\r\n    }\r\n\r\n    // FETCH USERS FROM DATABASE\r\n    fetchUsers = () => {\r\n        Axios.get('http://10.154.3.108:8090/react/api/all-users.php')\r\n        .then(({data}) => {\r\n\t\t\t console.log(data.users, data);\r\n            if(data.success === 1){\r\n                this.setState({\r\n                    users:data.users.reverse()\r\n                });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n     // ON EDIT MODE\r\n     editMode = (id) => {\r\n        let users = this.state.users.map(user => {\r\n            if(user.id === id){\r\n                user.isEditing = true;\r\n                return user;\r\n            }\r\n            user.isEditing = false;\r\n            return user;\r\n        });\r\n\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    //CANCEL EDIT MODE\r\n    cancelEdit = (id) => {\r\n        let users = this.state.users.map(user => {\r\n            if(user.id === id){\r\n                user.isEditing = false;\r\n                return user;\r\n            }\r\n            return user\r\n            \r\n        });\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    // UPDATE USER\r\n    handleUpdate = (id,user_name,user_email) => {\r\n        Axios.post('http://10.154.3.108:8090/react/api/update-user.php',\r\n        {\r\n            id:id,\r\n            user_name:user_name,\r\n            user_email:user_email\r\n        })\r\n        .then(({data}) => {\r\n\t\t\tconsole.log(data);\r\n            if(data.success === 1){\r\n                let users = this.state.users.map(user => {\r\n                    if(user.id === id){\r\n                        user.user_name = user_name;\r\n                        user.user_email = user_email;\r\n                        user.isEditing = false;\r\n                        return user;\r\n                    }\r\n                    return user; \r\n                });\r\n                this.setState({\r\n                    users\r\n                });\r\n            }\r\n            else{\r\n                alert(data.msg);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    // DELETE USER\r\n    handleDelete = (id) => {\r\n        let deleteUser = this.state.users.filter(user => {\r\n            return user.id !== id;\r\n        });\r\n        \r\n        Axios.post('http://10.154.3.108:8090/react/api/delete-user.php',{\r\n            id:id\r\n        })\r\n        .then(({data}) => {\r\n            if(data.success === 1){\r\n                this.setState({\r\n                    users:deleteUser\r\n                });\r\n            }\r\n            else{\r\n                alert(data.msg);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    // INSERT USER\r\n    insertUser = (event,user_name,user_email) => {\r\n        event.preventDefault();\r\n        event.persist();\r\n        Axios.post('http://10.154.3.108:8090/react/api/add-user.php',{\r\n            user_name:user_name,\r\n            user_email:user_email\r\n        })\r\n        .then(function ({data}) {\r\n            if(data.success === 1){\r\n                this.setState({\r\n                    users:[\r\n                        {\"id\":data.id,\"user_name\":user_name,\"user_email\":user_email},\r\n                        ...this.state.users\r\n                    ]\r\n                });\r\n\t\t\t\talert(data.msg);\r\n                event.target.reset();\r\n            }\r\n            else{\r\n                alert(data.msg);\r\n            }\r\n        }.bind(this))\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport default Actions;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React,{StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<StrictMode><App /></StrictMode>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}